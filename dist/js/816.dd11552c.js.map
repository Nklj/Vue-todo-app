{"version":3,"file":"js/816.dd11552c.js","mappings":"iNACOA,MAAM,O,SACQA,MAAM,oB,GAKdA,MAAM,e,GAETC,EAAAA,EAAAA,GAAyC,SAAlCC,IAAI,eAAc,YAAQ,G,GAC3BF,MAAM,oBAAoBG,MAAA,oC,GAG3BC,KAAK,OAAOC,IAAI,c,aAGrBJ,EAAAA,EAAAA,GAA+E,UAAvED,MAAM,MAAMI,KAAK,SAASD,MAAA,yBAA4B,YAAQ,G,oDAf9EG,EAAAA,EAAAA,IAuBM,MAvBN,EAuBM,CAtBOC,EAAAA,OAAAA,EAAAA,EAAAA,OAAXD,EAAAA,EAAAA,IAoBM,MApBN,EAoBM,EAnBJL,EAAAA,EAAAA,GAAuB,WAAAO,EAAAA,EAAAA,IAAjBD,EAAAA,KAAKE,OAAK,IAEhBR,EAAAA,EAAAA,GAgBO,QAhBAS,SAAM,8BAAUH,EAAAA,eAAAA,EAAAA,iBAAAA,IAAa,eAApC,EAEEN,EAAAA,EAAAA,GAIM,MAJN,EAIM,WAHJA,EAAAA,EAAAA,GAAmH,YAAzGE,MAAA,uB,qCAAmCQ,EAAAA,YAAWC,GAAEC,GAAG,cAAcb,MAAM,wBAAjF,iBAA6CW,EAAAA,eAC7CG,GACAb,EAAAA,EAAAA,GAAyG,OAAzG,GAAyGO,EAAAA,EAAAA,IAAhCG,EAAAA,YAAYI,QAAQ,QAAK,MAGpGd,EAAAA,EAAAA,GAAoC,QAApC,EAAoC,UAEd,cAAXM,EAAAA,KAAKS,SAAM,WAAtBV,EAAAA,EAAAA,IAIM,MAAAW,EAAA,CAHJC,GACAjB,EAAAA,EAAAA,GAAkH,UAA1GD,MAAM,WAAWI,KAAK,SAASD,MAAA,wBAA6BgB,QAAK,oBAAEZ,EAAAA,cAAAA,EAAAA,gBAAAA,KAAc,qBACzFN,EAAAA,EAAAA,GAAiF,UAAzED,MAAM,UAAUI,KAAK,SAAUe,QAAK,oBAAEZ,EAAAA,YAAAA,EAAAA,cAAAA,KAAY,sBAH5D,gBAVF,SAHF,WAqBAD,EAAAA,EAAAA,IAAuB,IAAAc,EAAb,e,CAKd,OACEC,SAAU,CACRC,OACE,OAAOC,KAAKC,OAAOC,QAAQC,UAAUH,KAAKI,OAAOC,OAAOf,GAC1D,GAEFgB,KAAM,KAAM,CACVC,YAAa,GACbC,KAAM,OAERC,UACET,KAAKO,YAAcP,KAAKD,KAAKQ,YAC7BP,KAAKQ,KAAOE,EAAEC,WAAWC,KAAKZ,KAAKa,MAAMC,WAAY,CACnDC,OAAQ,aACRC,YAAa,IAAIC,KAAKjB,KAAKD,KAAKS,MAChCU,gBAAgB,IAElBC,YAAW,KACTT,EAAEU,kBAAF,GACC,EACJ,EACDC,QAAS,CACPC,gBACEtB,KAAKC,OAAOsB,SAAS,aAAc,CACjCjC,GAAIU,KAAKD,KAAKT,GACdiB,YAAaP,KAAKO,YAClBC,KAAMR,KAAKQ,KAAKA,OAElBR,KAAKwB,QAAQC,KAAK,QACnB,EACDC,eACE1B,KAAKC,OAAOsB,SAAS,eAAgBvB,KAAKD,KAAKT,IAC/CU,KAAKwB,QAAQC,KAAK,QACnB,EACDE,aACE3B,KAAKC,OAAOsB,SAAS,aAAcvB,KAAKD,KAAKT,IAC7CU,KAAKwB,QAAQC,KAAK,QACpB,GAEFG,YACM5B,KAAKQ,MAAQR,KAAKQ,KAAKqB,SACzB7B,KAAKQ,KAAKqB,SAEd,G,QClEF,MAAMC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://vue-test-task/./src/views/TaskView.vue","webpack://vue-test-task/./src/views/TaskView.vue?be59"],"sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div v-if=\"task\" class=\"col s6 offset-s3\">\r\n      <h1>{{task.title}}</h1>\r\n\r\n      <form @submit.prevent=\"submitHandler\">\r\n\r\n        <div class=\"input-field\">\r\n          <textarea style=\"min-height: 150px\" v-model=\"description\" id=\"description\" class=\"materialize-textarea\"></textarea>\r\n          <label for=\"description\">Описание</label>\r\n          <span class=\"character-counter\" style=\"float: right; font-size: 12px;\">{{description.length}}/2048</span>\r\n        </div>\r\n\r\n        <input type=\"text\" ref=\"datepicker\">\r\n\r\n        <div v-if=\"task.status !== 'completed'\">\r\n          <button class=\"btn\" type=\"submit\" style=\"margin-right: 1rem;\">Обновить</button>\r\n          <button class=\"btn blue\" type=\"button\" style=\"margin-right: 1rem;\" @click=\"completeTask\">Завершить задачу</button>\r\n          <button class=\"btn red\" type=\"button\" @click=\"deleteTask\">Удалить задачу</button>\r\n        </div>\r\n        \r\n      </form>\r\n    </div>\r\n    <p v-else>Задач нет</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  computed: {\r\n    task() {\r\n      return this.$store.getters.taskById(+this.$route.params.id)\r\n    }\r\n  },\r\n  data: () => ({\r\n    description: '',\r\n    date: null,\r\n  }),\r\n  mounted() {\r\n    this.description = this.task.description\r\n    this.date = M.Datepicker.init(this.$refs.datepicker, {\r\n      format: 'dd.mm.yyyy',\r\n      defaultDate: new Date(this.task.date),\r\n      setDefaultDate: true\r\n    })\r\n    setTimeout(() => {\r\n      M.updateTextFields()\r\n    }, 0)\r\n  },\r\n  methods: {\r\n    submitHandler() {\r\n      this.$store.dispatch('updateTask', {\r\n        id: this.task.id,\r\n        description: this.description,\r\n        date: this.date.date\r\n      })\r\n      this.$router.push('/list')\r\n    },\r\n    completeTask() {\r\n      this.$store.dispatch('completeTask', this.task.id)\r\n      this.$router.push('/list')\r\n    },\r\n    deleteTask() {\r\n      this.$store.dispatch('deleteTask', this.task.id)\r\n      this.$router.push('/list')\r\n    }\r\n  },\r\n  destroyed() {\r\n    if (this.date && this.date.destroy) {\r\n      this.date.destroy()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>","import { render } from \"./TaskView.vue?vue&type=template&id=1d2c63f1\"\nimport script from \"./TaskView.vue?vue&type=script&lang=js\"\nexport * from \"./TaskView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"D:\\\\myProjects\\\\Vue-todo-app\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","for","style","type","ref","_createElementBlock","$options","_toDisplayString","title","onSubmit","_ctx","$event","id","_hoisted_4","length","status","_hoisted_7","_hoisted_8","onClick","_hoisted_9","computed","task","this","$store","getters","taskById","$route","params","data","description","date","mounted","M","Datepicker","init","$refs","datepicker","format","defaultDate","Date","setDefaultDate","setTimeout","updateTextFields","methods","submitHandler","dispatch","$router","push","completeTask","deleteTask","destroyed","destroy","__exports__","render"],"sourceRoot":""}